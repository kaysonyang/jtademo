spring.main.show_banner=false

#DB properties:
# URL
customer.datasource.url=jdbc:mysql://localhost:3306/test
# 用户名
customer.datasource.username=root
# 密码
customer.datasource.password=111111
# 最小连接数
customer.datasource.min-pool-size=2
# 最大连接数
customer.datasource.max-pool-size=5
# 连接最大存活时间，超过这个且没有正在使用的连接将自动销毁,
# 0无限制，1000 =1000s,
# 对于一些会自动中断连接的数据库如mysql，可以设置这个参数，在达到这个时间的时候会自动关闭连接，下次数据库调用的时候就会新建
customer.datasource.max-lifetime=20000
# 获取连接失败重新获等待最大时间，在这个时间内如果有可用连接，将返回
customer.datasource.borrow-connection-timeout=30
# java数据库连接池，最大可等待获取datasouce的时间
customer.datasource.login-timeout=30
# 连接回收时间
customer.datasource.maintenance-interval=60
# 最大闲置时间，超过最小连接池连接的连接将将关闭
customer.datasource.max-idle-time=60
# 测试连接的SQL
customer.datasource.test-query=select 1


# URL
order.datasource.url=jdbc:mysql://localhost:3306/vegnet
# 用户名
order.datasource.username=root
# 密码
order.datasource.password=111111
# 最小连接数
order.datasource.min-pool-size=2
# 最大连接数
order.datasource.max-pool-size=5
# 连接最大存活时间，超过这个且没有正在使用的连接将自动销毁,
# 0无限制，1000 =1000s,
# 对于一些会自动中断连接的数据库如mysql，可以设置这个参数，在达到这个时间的时候会自动关闭连接，下次数据库调用的时候就会新建
order.datasource.max-lifetime=20000
# 获取连接失败重新获等待最大时间，在这个时间内如果有可用连接，将返回
order.datasource.borrow-connection-timeout=30
# java数据库连接池，最大可等待获取datasouce的时间
order.datasource.login-timeout=30
# 连接回收时间
order.datasource.maintenance-interval=60
# 最大闲置时间，超过最小连接池连接的连接将将关闭
order.datasource.max-idle-time=60
# 测试连接的SQL
order.datasource.test-query=select 1




#JPA Configuration:
spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp


#Server Configuration:
server.port=8081
server.session.timeout=30